buildscript {
  ext {
    adocOutputDir = project.file("$buildDir/asciidoc")
  }
}

apply plugin: 'org.asciidoctor.convert'
apply plugin: 'org.ajoberstar.git-publish'

asciidoctor {
  sourceDir = project.file('src')
  sources {
    include 'index.adoc'
  }
  outputDir = adocOutputDir
  attributes toc: 'left',
      doctype: 'book',
      ruby: 'erubis',
      encoding: 'utf-8',
      linkattrs: true,
      numbered: true,
      sectanchors: true,
      sectlink: true,
      idprefix: '',
      docinfo1: '',
      icons: 'font',
      idseparator: '-',
      setanchors: 'true',
      imagesdir: './static/images',
      'source-highlighter': 'coderay',
      'toc-title': 'Table of Contents',
      'build-gradle': project.file('build.gradle'),
      'github_url': 'https://github.com/daggerok/security-first'

  logDocuments = true
  backends = ["html5"]
  //backends "pdf", "html5"
}

asciidoctor.doLast {
  def html5 = "$adocOutputDir/html5"
  project.file("$html5/404.html").text = project.file("$html5/index.html").text
  project.file("$html5/.nojekyll").text = ""
}

gitPublish {

  repoUri = 'git@github.com:daggerok/security-first.git'
  branch = "gh-pages"

  contents {
    from("$asciidoctor.outputDir/html5")
    from("$asciidoctor.sourceDir/static") {
      into "."
    }
  }

  commitMessage = "Publish ${rootProject.name} documentation (${project.group}:${project.name}:$project.version)"
}

gitPublishPush.dependsOn asciidoctor
gitPublishPush.shouldRunAfter clean, asciidoctor, build

task docs(dependsOn: gitPublishPush)
